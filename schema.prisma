// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               Int       @id @default(autoincrement())
  name             String    @default("")
  avatar_filesize  Int?
  avatar_extension String?
  avatar_width     Int?
  avatar_height    Int?
  avatar_id        String?
  email            String    @unique @default("")
  password         String
  createdAt        DateTime? @default(now())
  updatedAt        DateTime? @default(now())
}

model File {
  id            Int       @id @default(autoincrement())
  name          String    @default("")
  description   String    @default("")
  file_filesize Int?
  file_filename String?
  updatedAt     DateTime?
  createdAt     DateTime?
}

model Image {
  id              Int       @id @default(autoincrement())
  name            String    @default("")
  description     String    @default("")
  image_filesize  Int?
  image_extension String?
  image_width     Int?
  image_height    Int?
  image_id        String?
  updatedAt       DateTime?
  createdAt       DateTime?
}

model BuildingMaterial {
  id           Int              @id @default(autoincrement())
  materialName String           @default("")
  materialType String           @default("contractor")
  manufacturer String           @default("")
  price        Int?
  project      BuildingProject? @relation("BuildingMaterial_project", fields: [projectId], references: [id])
  projectId    Int?             @map("project")
  createdAt    DateTime?        @default(now())
  updatedAt    DateTime?

  @@index([projectId])
}

model BuildingProject {
  id                Int                @id @default(autoincrement())
  projectName       String             @default("")
  projectType       String             @default("contractor")
  location          String             @default("")
  duration          Int?
  materialsRequired BuildingMaterial[] @relation("BuildingMaterial_project")
  servicesRequired  BuildingService[]  @relation("BuildingService_project")
  tender            Tender?            @relation("BuildingProject_tender", fields: [tenderId], references: [id])
  tenderId          Int?               @map("tender")
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?

  @@index([tenderId])
}

model BuildingService {
  id                 Int              @id @default(autoincrement())
  serviceName        String           @default("")
  serviceDescription String           @default("")
  price              Int?
  project            BuildingProject? @relation("BuildingService_project", fields: [projectId], references: [id])
  projectId          Int?             @map("project")
  createdAt          DateTime?        @default(now())
  updatedAt          DateTime?

  @@index([projectId])
}

model ConstructionCompany {
  id                  Int       @id @default(autoincrement())
  name                String    @default("")
  address             String    @default("")
  type                String    @default("contractor")
  specialization      String    @default("")
  experience          Int?
  rating              Int?
  certifications      String    @default("")
  reviews             Review[]  @relation("Review_company")
  tendersWon          Tender[]  @relation("Tender_winner")
  tendersParticipated Tender[]  @relation("ConstructionCompany_tendersParticipated")
  createdAt           DateTime? @default(now())
  updatedAt           DateTime?
}

model Tender {
  id                          Int                   @id @default(autoincrement())
  title                       String                @default("")
  description                 String                @default("")
  budget                      Int?
  startDate                   DateTime?
  endDate                     DateTime?
  servicesRequired            String                @default("")
  projectType                 String                @default("")
  participants                ConstructionCompany[] @relation("ConstructionCompany_tendersParticipated")
  winner                      ConstructionCompany?  @relation("Tender_winner", fields: [winnerId], references: [id])
  winnerId                    Int?                  @map("winner")
  createdAt                   DateTime?             @default(now())
  updatedAt                   DateTime?
  from_BuildingProject_tender BuildingProject[]     @relation("BuildingProject_tender")

  @@index([winnerId])
}

model Review {
  id         Int                  @id @default(autoincrement())
  reviewText String               @default("")
  rating     Int?
  company    ConstructionCompany? @relation("Review_company", fields: [companyId], references: [id])
  companyId  Int?                 @map("company")
  createdAt  DateTime?            @default(now())
  updatedAt  DateTime?

  @@index([companyId])
}
